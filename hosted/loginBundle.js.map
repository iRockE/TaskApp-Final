{"version":3,"sources":["client.js","helper.js"],"names":["handleLogin","e","preventDefault","$","fadeOut","val","handleError","sendAjax","attr","serialize","redirect","handleSignup","LoginWindow","props","csrf","SignupWindow","createLoginWindow","ReactDOM","render","document","querySelector","createSignupWindow","setup","loginButton","signupButton","addEventListener","click","getToken","result","csrfToken","ready","message","text","fadeIn","response","window","location","type","action","data","success","ajax","cache","url","dataType","error","xhr","status","messageObj","JSON","parse","responseText"],"mappings":"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","file":"loginBundle.js","sourcesContent":["// Handles sending request to log user in\r\nconst handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    $(\"#errorMessageWrapper\").fadeOut(400, \"swing\");\r\n\r\n    if($(\"#user\").val() == '' || $(\"#pass\").val() == ''){\r\n        handleError(\"Username or password is empty\");\r\n        return false;\r\n    }\r\n\r\n    sendAjax('POST', $(\"#loginForm\").attr(\"action\"), $(\"#loginForm\").serialize(), redirect);\r\n\r\n    return false;\r\n};\r\n\r\n// Handles sending request to create new user\r\nconst handleSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    $(\"#errorMessageWrapper\").fadeOut(400, \"swing\");\r\n\r\n    if ($(\"#user\").val() == '' || $(\"#pass\").val() == '' || $(\"#pass2\").val() == '') {\r\n        handleError(\"All fields are required\");\r\n        return false;\r\n    }\r\n\r\n    if ($(\"#pass\").val() != $(\"#pass2\").val()) {\r\n        handleError(\"Passwords do not match\");\r\n        return false;\r\n    }\r\n\r\n    sendAjax('POST', $(\"#signupForm\").attr(\"action\"), $(\"#signupForm\").serialize(), redirect);\r\n\r\n    return false;\r\n};\r\n\r\n// Create login form through JSX\r\nconst LoginWindow = (props) => {\r\n    return (\r\n        <form id=\"loginForm\" \r\n            name=\"loginForm\"\r\n            onSubmit={handleLogin}\r\n            action=\"/login\"\r\n            method=\"POST\"\r\n            className=\"mainForm\"\r\n            >\r\n            <input id=\"user\" type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n            <input id=\"pass\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\r\n            <input type=\"hidden\" name=\"_csrf\" value={props.csrf} />\r\n            <input className=\"formSubmit\" type=\"submit\" value=\"Sign In\" />\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\n// Create sign up form through JSX\r\nconst SignupWindow = (props) => {\r\n    return (\r\n        <form id=\"signupForm\" \r\n            name=\"signupForm\"\r\n            onSubmit={handleSignup}\r\n            action=\"/signup\"\r\n            method=\"POST\"\r\n            className=\"mainForm\"\r\n            >\r\n            <input id=\"user\" type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n            <input id=\"pass\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\r\n            <input id=\"pass2\" type=\"password\" name=\"pass2\" placeholder=\"Retype Password\" />\r\n            <input type=\"hidden\" name=\"_csrf\" value={props.csrf} />\r\n            <input className=\"formSubmit\" type=\"submit\" value=\"Sign Up\" />\r\n        </form>\r\n    );\r\n};\r\n\r\n// Renders login form\r\nconst createLoginWindow = (csrf) => {\r\n    ReactDOM.render(\r\n        <LoginWindow csrf={csrf} />,\r\n        document.querySelector(\"#content\")\r\n    );\r\n};\r\n\r\n// Renders sign up form\r\nconst createSignupWindow = (csrf) => {\r\n    ReactDOM.render(\r\n        <SignupWindow csrf={csrf} />,\r\n        document.querySelector(\"#content\")\r\n    );\r\n};\r\n\r\n// Intializes the login page.\r\nconst setup = (csrf) => {\r\n    const loginButton = document.querySelector(\"#loginButton\");\r\n    const signupButton = document.querySelector(\"#signupButton\");\r\n\r\n    signupButton.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        createSignupWindow(csrf);\r\n        return false;\r\n    });\r\n\r\n    loginButton.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        createLoginWindow(csrf);\r\n        return false;\r\n    });\r\n\r\n    $(\"#errorMessageWrapper\").click(function() {\r\n        $(\"#errorMessageWrapper\").fadeOut(400, \"swing\");\r\n    });\r\n\r\n    createLoginWindow(csrf); // default view\r\n};\r\n\r\n// Gets the CSRF token for the current user so it can be stored on the page\r\nconst getToken = () => {\r\n    sendAjax('GET', '/getToken', null, (result) => {\r\n        setup(result.csrfToken);\r\n    });\r\n};\r\n\r\n$(document).ready(function() {\r\n    getToken();\r\n});","// Handles displaying error messages\r\nconst handleError = (message) => {\r\n    $(\"#errorMessageWrapper\").fadeOut(400, \"swing\", () => {\r\n        $(\"#errorMessage\").text(message);\r\n        $(\"#errorMessageWrapper\").fadeIn(400, \"swing\");\r\n    });\r\n};\r\n\r\n// Redirects the user to the given location\r\nconst redirect = (response) => {\r\n    $(\"#errorMessageWrapper\").fadeOut(400, \"swing\");\r\n    window.location = response.redirect;\r\n}\r\n\r\n// Handles sending json ajax requests\r\nconst sendAjax = (type, action, data, success) => {\r\n    $.ajax({\r\n        cache: false,\r\n        type: type,\r\n        url: action,\r\n        data: data,\r\n        dataType: \"json\",\r\n        success: success,\r\n        error: function(xhr, status, error) {\r\n            var messageObj = JSON.parse(xhr.responseText);\r\n            handleError(messageObj.error);\r\n        }\r\n    });\r\n};"]}