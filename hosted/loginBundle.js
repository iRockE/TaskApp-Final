"use strict";// Handles sending request to log user in
var handleLogin=function handleLogin(e){e.preventDefault();$("#errorMessageWrapper").fadeOut(400,"swing");if($("#user").val()==""||$("#pass").val()==""){handleError("Username or password is empty");return false}sendAjax("POST",$("#loginForm").attr("action"),$("#loginForm").serialize(),redirect);return false};// Handles sending request to create new user
var handleSignup=function handleSignup(e){e.preventDefault();$("#errorMessageWrapper").fadeOut(400,"swing");if($("#user").val()==""||$("#pass").val()==""||$("#pass2").val()==""){handleError("All fields are required");return false}if($("#pass").val()!=$("#pass2").val()){handleError("Passwords do not match");return false}sendAjax("POST",$("#signupForm").attr("action"),$("#signupForm").serialize(),redirect);return false};// Create login form through JSX
var LoginWindow=function LoginWindow(props){return React.createElement("form",{id:"loginForm",name:"loginForm",onSubmit:handleLogin,action:"/login",method:"POST",className:"mainForm"},React.createElement("input",{id:"user",type:"text",name:"username",placeholder:"Username"}),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"Password"}),React.createElement("input",{type:"hidden",name:"_csrf",value:props.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign In"}))};// Create sign up form through JSX
var SignupWindow=function SignupWindow(props){return React.createElement("form",{id:"signupForm",name:"signupForm",onSubmit:handleSignup,action:"/signup",method:"POST",className:"mainForm"},React.createElement("input",{id:"user",type:"text",name:"username",placeholder:"Username"}),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"Password"}),React.createElement("input",{id:"pass2",type:"password",name:"pass2",placeholder:"Retype Password"}),React.createElement("input",{type:"hidden",name:"_csrf",value:props.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign Up"}))};// Renders login form
var createLoginWindow=function createLoginWindow(csrf){ReactDOM.render(React.createElement(LoginWindow,{csrf:csrf}),document.querySelector("#content"))};// Renders sign up form
var createSignupWindow=function createSignupWindow(csrf){ReactDOM.render(React.createElement(SignupWindow,{csrf:csrf}),document.querySelector("#content"))};// Intializes the login page.
var setup=function setup(csrf){var loginButton=document.querySelector("#loginButton");var signupButton=document.querySelector("#signupButton");signupButton.addEventListener("click",function(e){e.preventDefault();createSignupWindow(csrf);return false});loginButton.addEventListener("click",function(e){e.preventDefault();createLoginWindow(csrf);return false});$("#errorMessageWrapper").click(function(){$("#errorMessageWrapper").fadeOut(400,"swing")});createLoginWindow(csrf);// default view
};// Gets the CSRF token for the current user so it can be stored on the page
var getToken=function getToken(){sendAjax("GET","/getToken",null,function(result){setup(result.csrfToken)})};$(document).ready(function(){getToken()});// Handles displaying error messages
var handleError=function handleError(message){$("#errorMessageWrapper").fadeOut(400,"swing",function(){$("#errorMessage").text(message);$("#errorMessageWrapper").fadeIn(400,"swing")})};// Redirects the user to the given location
var redirect=function redirect(response){$("#errorMessageWrapper").fadeOut(400,"swing");window.location=response.redirect};// Handles sending json ajax requests
var sendAjax=function sendAjax(type,action,data,success){$.ajax({cache:false,type:type,url:action,data:data,dataType:"json",success:success,error:function error(xhr,status,_error){var messageObj=JSON.parse(xhr.responseText);handleError(messageObj.error)}})};
//# sourceMappingURL=loginBundle.js.map
